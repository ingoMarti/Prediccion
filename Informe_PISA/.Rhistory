skim(datos_pisa)
# librería corrplot
corrplot(cor(datos_pisa%>%
select_at(vars(-country)),
use = "complete.obs"),
method = "circle", type = "upper")
# libreria PerformanceAnalytics
chart.Correlation(datos_pisa %>%
select_at(vars(-country)),
histogram=TRUE, pch=12)
# Grafico interest
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = interest)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico Support
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = support)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico income
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = income)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico health
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = health)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico edu
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = edu)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico hdi
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = hdi)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
attach(datos_pisa)
splinesInterest <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
splinesSupport <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
splinesIncome <- smooth.spline(datos_pisa$income, datos_pisa$overall, cv=TRUE)
splinesHealth <- smooth.spline(datos_pisa$health, datos_pisa$overall, cv=TRUE)
splinesEducation <- smooth.spline(datos_pisa$education, datos_pisa$overall, cv=TRUE)
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
#CNT vs Feeling Temperature
plot(datosç$interest, datos_pisa$overall, col='gray')
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
#CNT vs Feeling Temperature
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos$interest, datos_pisa$overall, df=16)
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
#CNT vs Feeling Temperature
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$interest, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df #8.8
splinesInterest <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
splinesSupport <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
splinesIncome <- smooth.spline(datos_pisa$income, datos_pisa$overall, cv=TRUE)
splinesHealth <- smooth.spline(datos_pisa$health, datos_pisa$overall, cv=TRUE)
splinesEducation <- smooth.spline(datos_pisa$education, datos_pisa$overall, cv=TRUE)
# Grafico interest
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = interest)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico Support
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = support)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico income
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = income)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico health
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = health)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico edu
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = edu)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico hdi
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = hdi)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$interest, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df #8.8
plot(datos_pisa$support, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$support, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df #8.8
plot(datos_pisa$income, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$income, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$income, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df #8.8
plot(datos_pisa$health, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$health, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$health, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df #8.8
plot(datos_pisa$education, datos_pisa$overall, col='gray')
plot(datos_pisa$education, datos_pisa$overall, col='gray')
library(tidyverse)
library(broom) # modelos en df
library(flextable) # Tablas formateadas
library(mgcv) # para estimar gam
library(reshape2) # melt
library(magrittr) # Pipe operators
library(janitor) # Clean names
library(skimr) # == Summarize
library(imputeTS) # para cambiar los valores nulos por la media
library(PerformanceAnalytics) # grafico de correlaciones
library(corrplot)
pisa2006 <- read.csv("pisasci2006.csv")
pisa2006 %<>% clean_names()
colnames(pisa2006)  # Ahora los nombres de las columnas esta en minuscula
pisa2006 %<>% distinct(country,.keep_all= TRUE) # duplicados
summarise_all(pisa2006, funs(sum(is.na(.)))) # contamos valores nulos
pisa2006 <- na_mean(pisa2006) # cambiamos los NaN por la media
datos_pisa <- select(pisa2006, -issues, -explain, -evidence)
# quitamos las variables categoricas
head(datos_pisa) # vemos que nuestra no varia porque no teniamos duplicados
# libreria skimr
skim(datos_pisa)
# librería corrplot
corrplot(cor(datos_pisa%>%
select_at(vars(-country)),
use = "complete.obs"),
method = "circle", type = "upper")
# libreria PerformanceAnalytics
chart.Correlation(datos_pisa %>%
select_at(vars(-country)),
histogram=TRUE, pch=12)
# Grafico interest
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = interest)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico Support
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = support)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico income
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = income)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico health
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = health)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico edu
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = edu)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico hdi
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = hdi)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$interest, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 4.75
plot(datos_pisa$support, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$support, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 2.001
plot(datos_pisa$income, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$income, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$income, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 4.24
plot(datos_pisa$health, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$health, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$health, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 2.002
plot(datos_pisa$education, datos_pisa$overall, col='gray')
plot(datos_pisa$hdi, datos_pisa$overall, col='gray')
fit <- smooth.spline(datos_pisa$hdi, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$hdi, datos_pisa$overall, cv=TRUE)
lines(fit, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df #8.8
splinesInterest$lambda
splinesSupport$lambda
splinesIncome$lambda
splinesHealth$lambda
splinesEducation$lambda
gam1 <- gam(overall ~s(interest,df=4.75)+s(support,df=2.001)+s(income,df=4.24)+s(health,df=2.002)+s(education,df=8.8)+s(hdi,df=8.603), data=datos_pisa)
gam1 <- gam(overall ~s(interest,df=4.75)+s(support,df=2.001)+s(income,df=4.24)+s(health,df=2.002)+s(education,df=8.8)+s(hdi,df=8.603), data=datos_pisa)
fit2$lambda
fit4$lambda
plot(datos_pisa$support, datos_pisa$overall, col='gray')
fit3 <- smooth.spline(datos_pisa$support, datos_pisa$overall, df=16)
fit4 <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
lines(fit3, col='red', lwd=2)
lines(fit4, col='blue', lwd=1)
fit4$df # 2.001
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit1 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
lines(fit1, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 4.75
plot(datos_pisa$support, datos_pisa$overall, col='gray')
fit3 <- smooth.spline(datos_pisa$support, datos_pisa$overall, df=16)
fit4 <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
lines(fit3, col='red', lwd=2)
lines(fit4, col='blue', lwd=1)
fit4$df # 2.001
fit2$lambda
fit4$lambda
fit6$lambda
fit2$lambda
fit4$lambda
fit6$lambda
fit2$lambda
fit4$lambda
fit6$lambda
- Country
- Overall
- Issues
- Explain
- Evidence
- Interest
- Support
- Income
- Health
- Edu
- HDI
library(tidyverse)
library(broom) # modelos en df
library(flextable) # Tablas formateadas
library(mgcv) # para estimar gam
library(reshape2) # melt
library(magrittr) # Pipe operators
library(janitor) # Clean names
library(skimr) # == Summarize
library(imputeTS) # para cambiar los valores nulos por la media
library(PerformanceAnalytics) # grafico de correlaciones
library(corrplot)
pisa2006 <- read.csv("pisasci2006.csv")
pisa2006 %<>% clean_names()
colnames(pisa2006)  # Ahora los nombres de las columnas esta en minuscula
pisa2006 %<>% distinct(country,.keep_all= TRUE) # duplicados
summarise_all(pisa2006, funs(sum(is.na(.)))) # contamos valores nulos
pisa2006 <- na_mean(pisa2006) # cambiamos los NaN por la media
datos_pisa <- select(pisa2006, -issues, -explain, -evidence)
# quitamos las variables categoricas
head(datos_pisa) # vemos que nuestra no varia porque no teniamos duplicados
# libreria skimr
skim(datos_pisa)
# librería corrplot
corrplot(cor(datos_pisa%>%
select_at(vars(-country)),
use = "complete.obs"),
method = "circle", type = "upper")
# libreria PerformanceAnalytics
chart.Correlation(datos_pisa %>%
select_at(vars(-country)),
histogram=TRUE, pch=12)
# Grafico interest
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = interest)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico Support
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = support)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico income
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = income)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico health
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = health)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico edu
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = edu)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico hdi
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = hdi)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit1 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
lines(fit1, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 4.75
plot(datos_pisa$support, datos_pisa$overall, col='gray')
fit3 <- smooth.spline(datos_pisa$support, datos_pisa$overall, df=16)
fit4 <- smooth.spline(datos_pisa$support, datos_pisa$overall, cv=TRUE)
lines(fit3, col='red', lwd=2)
lines(fit4, col='blue', lwd=1)
fit4$df # 2.001
plot(datos_pisa$income, datos_pisa$overall, col='gray')
fit5 <- smooth.spline(datos_pisa$income, datos_pisa$overall, df=16)
fit6 <- smooth.spline(datos_pisa$income, datos_pisa$overall, cv=TRUE)
lines(fit5, col='red', lwd=2)
lines(fit6, col='blue', lwd=1)
fit6$df # 4.24
plot(datos_pisa$health, datos_pisa$overall, col='gray')
fit7 <- smooth.spline(datos_pisa$health, datos_pisa$overall, df=16)
fit8 <- smooth.spline(datos_pisa$health, datos_pisa$overall, cv=TRUE)
lines(fit7, col='red', lwd=2)
lines(fit8, col='blue', lwd=1)
fit8$df # 2.002
plot(datos_pisa$education, datos_pisa$overall, col='gray')
plot(datos_pisa$hdi, datos_pisa$overall, col='gray')
fit11 <- smooth.spline(datos_pisa$hdi, datos_pisa$overall, df=16)
fit12 <- smooth.spline(datos_pisa$hdi, datos_pisa$overall, cv=TRUE)
lines(fit11, col='red', lwd=2)
lines(fit12, col='blue', lwd=1)
fit12$df # 8.603
gam1 <- gam(overall ~
s(interest,df=4.75) +
s(support,df=2.001) +
s(income,df=4.24) +
s(health,df=2.002) +
s(education,df=8.8) +
s(hdi,df=8.603),
data=datos_pisa)
gam1 <- gam(overall ~
s(interest,df=4.75) +
s(support,df=2.001) +
s(income,df=4.24) +
s(health,df=2.002) +
s(education,df=2.00) +
s(hdi,df=8.603),
data=datos_pisa)
gam1 <- gam(overall ~
s(interest,df=4.75) +
s(support,df=2.001) +
s(income,df=4.24) +
s(health,df=2.002) +
s(education,df=2.00) +
s(hdi,df=8.603),
data=datos_pisa)
gam1 <- gam(overall ~
s(interest, 4.75) +
s(support, 2.001) +
s(income, 4.24) +
s(health,df=2.002) +
s(education, 2.00) +
s(hdi, 8.603),
data=datos_pisa)
gam1 <- gam(datos_pisa$overall ~
s(datos_pisa$interest, 4.75) +
s(datos_pisa$support, 2.001) +
s(datos_pisa$income, 4.24) +
s(datos_pisa$health,df=2.002) +
s(datos_pisa$education, 2.00) +
s(datos_pisa$hdi, 8.603),
data=datos_pisa)
gam1 <- gam(overall ~
s(interest, 4.75) +
s(support, 2.001) +
s(income, 4.24) +
s(health,df=2.002) +
s(education, 2.00) +
s(hdi, 8.603),
data=datos_pisa)
gam1 <- gam(overall~
s(interest, 4.75) +
s(support, 2.001) +
s(income, 4.24) +
s(health,df=2.002) +
s(education, 2.00) +
s(hdi, 8.603),
data=datos_pisa)
gam1 <- gam(overall~
s(interest,df=4.75) +
s(support,df=2.001) +
s(income,df=4.24) +
s(health,df=2.002) +
s(education,df=2.00) +
s(hdi,df=8.603),
data=datos_pisa)
gam1 <- gam(overall~ s(interest,df=4.75) + s(support,df=2.001) + s(income,df=4.24) +  s(health,df=2.002) + s(education,df=2.00) + s(hdi,df=8.603), data=datos_pisa)
gam1 <- gam(overall~ s(interest, df=4.75) + s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(education, df=2.00) + s(hdi, df=8.603), data=datos_pisa)
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
plot(datos_pisa$education, datos_pisa$overall, col='gray')
datos_pisa <- select(pisa2006, -country, -issues, -explain, -evidence)
plot(datos_pisa$education, datos_pisa$overall, col='gray')
fit9 <- smooth.spline(datos_pisa$education, datos_pisa$overall, df=16)
library(tidyverse)
library(broom) # modelos en df
library(flextable) # Tablas formateadas
library(mgcv) # para estimar gam
library(reshape2) # melt
library(magrittr) # Pipe operators
library(janitor) # Clean names
library(skimr) # == Summarize
library(imputeTS) # para cambiar los valores nulos por la media
library(PerformanceAnalytics) # grafico de correlaciones
library(corrplot) # para ver outliers
pisa2006 <- read.csv("pisasci2006.csv")
pisa2006 %<>% clean_names()
colnames(pisa2006)  # Ahora los nombres de las columnas esta en minuscula
pisa2006 %<>% distinct(country,.keep_all= TRUE) # duplicados
summarise_all(pisa2006, funs(sum(is.na(.)))) # contamos valores nulos
pisa2006 <- na_mean(pisa2006) # cambiamos los NaN por la media
datos_pisa <- select(pisa2006, -issues, -explain, -evidence)
# quitamos las variables categoricas
head(datos_pisa) # vemos que nuestra no varia porque no teniamos duplicados
plot(datos_pisa$education, datos_pisa$overall, col='gray')
plot(datos_pisa$edu, datos_pisa$overall, col='gray')
fit9 <- smooth.spline(datos_pisa$edu, datos_pisa$overall, df=16)
fit10 <- smooth.spline(datos_pisa$edu, datos_pisa$overall, cv=TRUE)
lines(fit9, col='red', lwd=2)
lines(fit10, col='blue', lwd=1)
fit10$df # 2.00
fit2$lambda
fit4$lambda
fit6$lambda
fit8$lambda
fit10$lambda
fit12$lambda
gam1 <- gam(overall~ s(interest, df=4.75) + s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
gam1 <- gam(overall~ s(interest, df=4.75) + s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
gam1 <- gam(overall~ s(interest, df=4.75) + s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
datos_pisa <- select(interest, support, income, health, edu, hdi)
datos_pisa <- select(interest, support, income, health, edu, hdi)
datos_pisa <- select(datos_pisa, +interest, +support, +income, +health, +edu, +hdi)
# Grafico interest
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = interest)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico Support
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = support)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico income
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = income)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico health
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = health)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico edu
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = edu)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
# Grafico hdi
baseplot1 <- ggplot(data = datos_pisa, mapping = aes(x = overall, y = hdi)) +
layer(geom = "point",stat = "identity",position = "identity") +
theme_bw() + theme(legend.key = element_blank())
baseplot1
plot(datos_pisa$interest, datos_pisa$overall, col='gray')
fit1 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, df=16)
fit2 <- smooth.spline(datos_pisa$interest, datos_pisa$overall, cv=TRUE)
lines(fit1, col='red', lwd=2)
lines(fit2, col='blue', lwd=1)
fit2$df # 4.75
gam1 <- gam(overall~ s(interest, df=4.75) + s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
datos_pisa <- select(datos_pisa, +interest, +support, +income, +health, +edu, +hdi)
colnames(datos_pisa)
datos_pisa <- select(datos_pisa, +interest, +support, +income, +health, +edu, +hdi)
gam1 <- gam(overall~ s(interest, df=4.75) + s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
gam1 <- gam(overall~  s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
gam1 <- gam(overall~  s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
gam1 <- gam(overall~ s(support, df=2.001) + s(income, df=4.24) +  s(health, df=2.002) + s(edu, df=2.002) + s(hdi, df=8.603), data=datos_pisa)
